{"version":3,"sources":["node_modules/zone.js/fesm2015/zone.js"],"sourcesContent":["'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n((function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        // tslint:disable-next-line:require-internal-with-underscore\n        static { this.__symbol__ = __symbol__; }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class _ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n}))(globalThis);\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || globalThis;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] !== false;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected :\n                forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    const AggregateError = global.AggregateError;\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static any(values) {\n            if (!values || typeof values[Symbol.iterator] !== 'function') {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            const promises = [];\n            let count = 0;\n            try {\n                for (let v of values) {\n                    count++;\n                    promises.push(ZoneAwarePromise.resolve(v));\n                }\n            }\n            catch (err) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            if (count === 0) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            let finished = false;\n            const errors = [];\n            return new ZoneAwarePromise((resolve, reject) => {\n                for (let i = 0; i < promises.length; i++) {\n                    promises[i].then(v => {\n                        if (finished) {\n                            return;\n                        }\n                        finished = true;\n                        resolve(v);\n                    }, err => {\n                        errors.push(err);\n                        count--;\n                        if (count === 0) {\n                            finished = true;\n                            reject(new AggregateError(errors, 'All promises were rejected'));\n                        }\n                    });\n                }\n            });\n        }\n        ;\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                const onceWrapper = once();\n                executor &&\n                    executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n            // may be an object without a prototype (created through `Object.create(null)`); thus\n            // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n            // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n            // object and copies promise properties into that object (within the `getOrCreateLoad`\n            // function). The zone.js then checks if the resolved value has the `then` method and invokes\n            // it with the `value` context. Otherwise, this will throw an error: `TypeError: Cannot read\n            // properties of undefined (reading 'Symbol(Symbol.species)')`.\n            let C = this.constructor?.[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n            let C = this.constructor?.[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return { ...options, passive: true };\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter(name => name.startsWith('on') && name.length > 2)\n        .map(name => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document', 'SVGElement', 'Element', 'HTMLElement', 'HTMLBodyElement', 'HTMLMediaElement',\n            'HTMLFrameSetElement', 'HTMLFrameElement', 'HTMLIFrameElement', 'HTMLMarqueeElement', 'Worker'\n        ]);\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'IDBIndex', 'IDBRequest', 'IDBOpenDBRequest',\n        'IDBDatabase', 'IDBTransaction', 'IDBCursor', 'WebSocket'\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target && target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\nZone.__load_patch('util', (global, Zone, api) => {\n    // Collect native event names by looking at properties\n    // on the global namespace, e.g. 'onclick'.\n    const eventNames = getOnEventNames(global);\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchQueueMicrotask(global, api) {\n    api.patchMethod(global, 'queueMicrotask', (delegate) => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    patchQueueMicrotask(global, api);\n});\n"],"mappings":"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","names":["global","performance","mark","name","performanceMeasure","label","symbolPrefix","__symbol__","checkDuplicate","_Zone","patches","zone","_currentZoneFrame","_currentTask","fn","ignoreDuplicate","perfName","_api","parent","zoneSpec","_ZoneDelegate","key","current","callback","source","_callback","applyThis","applyArgs","error","task","NO_ZONE","notScheduled","eventTask","macroTask","reEntryGuard","running","scheduled","previousTask","unknown","newZone","scheduling","zoneDelegates","err","data","customSchedule","ZoneTask","microTask","customCancel","canceling","count","i","Zone","DELEGATE_ZS","delegate","_","target","hasTaskState","parentDelegate","zoneSpecHasTask","parentHasTask","targetZone","returnTask","scheduleMicroTask","value","isEmpty","type","counts","prev","next","options","scheduleFn","cancelFn","self","args","_numberOfNestedTaskFrames","drainMicroTaskQueue","toState","fromState1","fromState2","symbolSetTimeout","symbolPromise","symbolThen","_microTaskQueue","_isDrainingMicrotaskQueue","nativeMicroTaskQueuePromise","nativeScheduleMicroTask","func","nativeThen","queue","noop","ObjectGetOwnPropertyDescriptor","ObjectDefineProperty","ObjectGetPrototypeOf","ObjectCreate","ArraySlice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","wrapWithCurrentZone","scheduleMacroTaskWithCurrentZone","zoneSymbol","isWindowExists","internalWindow","_global","REMOVE_ATTRIBUTE","bindArguments","patchPrototype","prototype","fnNames","prototypeDesc","isPropertyWritable","patched","attachOriginToPatched","propertyDesc","isWebWorker","isNode","isBrowser","isMix","zoneSymbolEventNames$1","wrapFn","event","eventNameSymbol","listener","result","errorEvent","patchProperty","obj","prop","desc","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","newValue","patchOnProperties","properties","onProperties","j","originalInstanceKey","patchClass","className","OriginalClass","instance","patchMethod","patchFn","proto","delegateName","patchDelegate","patchMacroTask","funcName","metaCreator","setNative","scheduleTask","meta","original","isDetectedIEOrEdge","ieOrEdge","isIE","ua","isIEOrEdge","api","readableObjectToString","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","creationTrace","e","rejection","uncaughtPromiseError","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","forwardResolution","forwardRejection","ZoneAwarePromise","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","REJECTED_NO_CATCH","makeResolver","promise","state","v","resolvePromise","once","wasCalled","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","then","clearRejectedNoCatch","trace","scheduleResolveOrReject","REJECTION_HANDLED_HANDLER","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","ZONE_AWARE_PROMISE_TO_STRING","AggregateError","values","promises","finished","errors","resolve","reject","res","rej","onResolve","onReject","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","C","onFinally","NativePromise","symbolThenPatched","patchThen","Ctor","originalThen","zoneify","resultPromise","ctor","originalFunctionToString","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","PROMISE_OBJECT_TO_STRING","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbol","symbolCapture","patchEventTarget","apis","patchOptions","ADD_EVENT_LISTENER","REMOVE_EVENT_LISTENER","LISTENERS_EVENT_LISTENER","REMOVE_ALL_LISTENERS_EVENT_LISTENER","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","invokeTask","globalCallback","context","isCapture","tasks","copyTasks","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","returnTarget","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","buildEventListenerOptions","passive","customScheduleGlobal","customCancelGlobal","symbolEventNames","symbolEventName","existingTasks","customScheduleNonGlobal","customSchedulePrepend","customCancelNonGlobal","compareTaskCallbackVsDelegate","typeOfDelegate","compare","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","prepend","isHandleEvent","capture","isExisting","constructorName","targetSource","existingTask","onPropertySymbol","listeners","findEventTasks","symbolCaptureEventName","captureTasks","removeTasks","keys","match","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","patchEventPrototype","Event","patchCallbacks","targetName","method","callbacks","nativeDelegate","opts","descriptor","filterProperties","ignoreProperties","tip","ip","targetIgnoreProperties","op","patchFilteredProperties","filteredProperties","getOnEventNames","propertyDescriptorPatch","patchTargets","ignoreErrorProperties","eventNames","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","patchQueueMicrotask","taskSymbol","patchTimer","window","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","handle","id","patchCustomElements","eventTargetPatch","EVENT_TARGET","patchEvent","legacyPatch","set","clear","blockingMethods","s","XMLHttpRequestEventTarget","patchXHR","XHR_TASK","XHR_SYNC","XHR_LISTENER","XHR_SCHEDULED","XHR_URL","XHR_ERROR_BEFORE_SCHEDULED","XMLHttpRequest","XMLHttpRequestPrototype","findPendingTask","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","newListener","loadTasks","oriInvoke","sendNative","placeholderCallback","abortNative","openNative","XMLHTTPREQUEST_SOURCE","fetchTaskAborting","fetchTaskScheduling","findPromiseRejectionHandler","PromiseRejectionEvent","evt"],"x_google_ignoreList":[0]}